?start: statement+

?statement: assignment
          | if_statement
          | while_loop
          | for_loop
          | assert_stmt
          | block
          | array_operation

assignment: VAR "=" expr ";"
assert_stmt: "verify" "(" condition ")" ";"

if_statement: "when" "(" condition ")" block ["otherwise" block]
while_loop: "repeat" "(" condition ")" block
for_loop: "iterate" "(" assignment condition ";" assignment ")" block

array_operation: VAR "[" expr "]" "=" expr ";"
               | VAR "=" VAR "[" expr "]"

block: "{" statement+ "}"

?expr: term
     | expr "+" term   -> add
     | expr "-" term   -> sub

?term: factor
     | term "*" factor -> mul
     | term "/" factor -> div

?factor: NUMBER -> number
       | VAR    -> var
       | "(" expr ")"

?condition: expr comparator expr

?comparator: COMP
COMP: "==" | "!=" | "<" | "<=" | ">" | ">="

VAR: /[a-zA-Z_][a-zA-Z0-9_]*/
NUMBER: /[0-9]+/

%ignore /[ \t\r\n]+/
%ignore /\/\/[^\n]*/   // single line comment